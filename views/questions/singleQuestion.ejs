<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Single Question</title>
  <link rel="stylesheet" href="/singleQuestion.css" />
</head>
<body>
  <%- include("../components/navbar.ejs") %>

  <main class="content-wrapper">
    <section class="container question-section">
      <h2 class="section-title">Question</h2>
      <% if (data && data[0]) { %>
        <div class="card question-card">
          <h3 class="question"><%- data[0].title %></h3>
          <img src="<%- data[0].image %>" alt="Question Image" class="question-image" />
          <p class="description"><strong>Description:</strong> <span><%- data[0].description %></span></p>
          <p class="date"><strong>Date:</strong> <span><%= new Date(data[0].updatedAt).toDateString() %></span></p>
          <p class="author"><strong>Asked by:</strong> <span><%- data[0].user.username %></span></p>

          <% if (isAuthenticated && userId && data[0].userId && String(userId) === String(data[0].userId)) { %>
            <div class="question-actions">
              <a href="/question/edit/<%- data[0].id %>" class="edit-btn">Edit</a>
              <button class="delete-btn" data-question-id="<%- data[0].id %>">Delete</button>
            </div>
          <% } %>
        </div>
      <% } else { %>
        <p>Question not found.</p>
      <% } %>
    </section>

    <section class="container answer-section">
      <h2 class="section-title">Answers</h2>
      <% if (answers && answers.length > 0) { %>
        <% answers.forEach((answer) => { %>
          <div class="card answer-card">
            <p class="answer-text"><%- answer.answerText %></p>
            <p class="date"><strong>Date:</strong> <%= new Date(answer.updatedAt).toDateString() %></p>
            <p class="author"><strong>Answered by:</strong> <%- answer.user.username %></p>
            <button class="like-btn" data-answer-id="<%= answer.id %>">Like</button>
            <span id="likes-<%= answer.id %>"><%= answer.likes || 0 %></span>
          </div>
        <% }) %>
      <% } else { %>
        <p>No answers yet.</p>
      <% } %>
    </section>

    <section class="container form-section">
      <h2 class="section-title">Submit Your Answer</h2>
      <% if (data && data[0]) { %>
        <form action="/answer/<%- data[0].id %>" method="POST">
          <textarea name="answer" placeholder="Write your answer here..." required></textarea>
          <button type="submit" class="submit-btn">Submit Answer</button>
        </form>
      <% } else { %>
        <p>Cannot submit an answer because the question was not found.</p>
      <% } %>
    </section>
  </main>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    function getCookie(name) {
      const value = `; ${document.cookie}`;
      const parts = value.split(`; ${name}=`);
      if (parts.length === 2) return parts.pop().split(';').shift();
    }

    const socket = io();
    const jwtToken = getCookie('jwtToken');

    document.querySelectorAll('.like-btn').forEach(button => {
      button.addEventListener('click', () => {
        const answerId = button.getAttribute('data-answer-id');
        if (!jwtToken) {
          alert("You must be logged in to like an answer.");
          return;
        }
        socket.emit("like", { answerId, token: jwtToken });
      });
    });

    document.querySelectorAll('.delete-btn').forEach(button => {
      button.addEventListener('click', () => {
        const questionId = button.getAttribute('data-question-id');
        if (!jwtToken) {
          alert("You must be logged in to delete a question.");
          return;
        }
        if (confirm("Are you sure you want to delete this question?")) {
          fetch(`/question/delete/${questionId}`, {
            method: 'DELETE',
            headers: {
              'Authorization': `Bearer ${jwtToken}`
            }
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              window.location.href = '/';
            } else {
              alert(data.message || "Failed to delete question.");
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert("An error occurred while deleting the question.");
          });
        }
      });
    });

    socket.on("likeUpdate", ({ likesCount, answerId }) => {
      const likesEl = document.getElementById(`likes-${answerId}`);
      if (likesEl) likesEl.textContent = likesCount;
    });

    socket.on("error", ({ message }) => {
      alert(message);
    });
  </script>

  <%- include("../components/footer.ejs") %>
</body>
</html>